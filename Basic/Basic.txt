https://react.dev/
REACT:
    React is a JavaScript library used for building user interfaces, especially for single-page applications (SPAs) where you want fast, dynamic updates without reloading the whole page.

COMPONENT:
    A component in React is a function or class that returns HTML+JS like UI code.
    2 Types:
        Functional Component â€“ A simple JavaScript function.Class Component â€“ An older way (less used now).

JSX:
    JSX stands for JavaScript XML.
    It lets you write HTML inside JavaScript.

Installation of React:
    npm create vite@latest (main)


#IMPORTANT:
    Babel is a JavaScript compiler that converts modern JavaScript (like JSX or ES6+) into plain JavaScript that all browsers can understand.
    https://babeljs.io/

Fragment: (<>......</>)
    function Info() {
        return (
            <div>
                <h1>Welcome</h1>
                <p>This is React Fragment.</p>
            <div/>
        );
    }
    REPLACE BY
    function Info() {
        return (
            <>
                <h1>Welcome</h1>
                <p>This is React Fragment.</p>
            </>
        );
    }



3 Imporatnt Pillar in React 
    Component:
        Class
        functional:
            Logical Components
                -> Not focused on UI, but on how things work.
                -> Manage state, side effects
            Presentational Components
                -> Focus on UI rendering.
                -> No state
    Props
    State


Closure in JS:
    The inner function can access variables declared in the outer function, even after the outer function has finished executing.
    
    This relationship â€” where the inner function "remembers" the outer function's variables â€” is called a closure

    function outer() {
        let name = "Yash";   // ðŸ‘ˆ outer function variable

        function inner() {
            console.log("Hello " + name);  // ðŸ‘ˆ inner function uses outer's variable
        }

        return inner;
    }


React_Part3_State
State:
    State is a built-in React object used to store data that can change over time in a component.

    State is used to manage dynamic data in a component and re-render UI when the data changes.

Hooks:
    Hooks are special functions in React that let you use state and other React features in functional components.

    Hooks allow functional components to manage state, side effects, and more without using classes.
    
    Some Common Hooks:
        useState() â€“ to manage state

        useEffect() â€“ to handle side effects (like API calls)

        useContext() â€“ to use context API

        useRef(), useMemo(), useCallback() â€“ for optimization and references


React_part6
UseEffect():
    tab use hota hai jab humein component render hone par ya update hone par koi kaam karwana ho â€” jaise API call, console log, timer set karna, etc